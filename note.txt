// ProjectDetails.tsx
"use client";

import { FC } from "react";
import Image, { StaticImageData } from "next/image";
import { ProjectType } from "./data";
import { ScrollArea } from "../ui/scroll-area";

interface ProjectDetailsProps {
  project: ProjectType;
  className?: string;
}

const badgeColors: Record<string, string> = {
  frontend: "bg-blue-100 text-blue-700",
  backend: "bg-green-100 text-green-700",
  fullstack: "bg-purple-100 text-purple-700",
};

const ProjectDetails: FC<ProjectDetailsProps> = ({ project, className }) => {
  return (
    <ScrollArea
      className={`max-h-[80vh] max-w-screen  scroll-smooth mx-auto  p-6 space-y-6 ${className || ""}`}
    >
      <div className="flex items-center gap-4">
        <Image
          src={project.icon}
          alt={project.category}
          width={40}
          height={40}
          className="rounded"
        />
        <span
          className={`px-3 py-1 rounded-full text-xs font-semibold ${
            badgeColors[project.category] || "bg-gray-100 text-gray-700"
          }`}
        >
          {project.category.toUpperCase()}
        </span>
      </div>
      <h2 className="text-xl md:text-2xl font-bold text-gray-800">{project.title}</h2>
    
      {project.image && project.image.length > 0 && (
        <div className="flex gap-4 flex-wrap my-4">
          {project.image.map((img, idx) => (
            <Image
              key={idx}
              src={img as StaticImageData}
              alt={project.title}
              width={320}
              height={180}
              className="rounded-lg border shadow-md"
            />
          ))}
        </div>
      )}
      {project.video && (
        <div className="aspect-video w-full">
          <iframe
            src={project.video.replace("youtu.be/", "www.youtube.com/embed/").replace("?si=", "?si=")}
            title={project.title}
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowFullScreen
            className="w-full h-64 rounded-lg border shadow-sm"
          />
        </div>
      )}

        <p className="text-gray-700 text-sm leading-relaxed">
        {project.desc}
      </p>
      <div className="flex flex-wrap gap-4 mt-4">
        {project.demo && (
          <a
            href={project.demo}
            target="_blank"
            rel="noopener noreferrer"
            className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition"
          >
            Live Demo
          </a>
        )}
        {project.github && (
          <a
            href={project.github}
            target="_blank"
            rel="noopener noreferrer"
            className="px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-900 transition"
          >
            GitHub
          </a>
        )}
      </div>
    </ScrollArea>
  );
};

export default ProjectDetails;